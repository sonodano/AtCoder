#%%
N, M = 10, 12
field = [['W', '.', '.', '.', '.', '.', '.', '.', '.', 'W', 'W', '.'],
         ['.', 'W', 'W', 'W', '.', '.', '.', '.', '.', 'W', 'W', '.'],
         ['.', '.', '.', '.', 'W', 'W', '.', '.', '.', 'W', 'W', '.'],
         ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'W', 'W', '.'],
         ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'W', '.', '.'],
         ['.', '.', 'W', '.', '.', '.', '.', '.', '.', 'W', '.', '.'],
         ['.', 'W', '.', 'W', '.', '.', '.', '.', '.', 'W', 'W', '.'],
         ['W', '.', 'W', '.', 'W', '.', '.', 'W', '.', '.', 'W', '.'],
         ['.', 'W', '.', 'W', '.', '.', '.', '.', '.', '.', 'W', '.'],
         ['.', '.', 'W', '.', '.', '.', '.', '.', '.', '.', 'W', '.']]


# Wのある現在位置からdfsをはじめる
# 繋がっている部分を全部探し出して、W→.に置き換える
def dfs(x, y):
    # 今いるところを.に置き換える
    field[x][y] = '.'

    # 移動する8方向をループ
    for dx in range(-1, 2):  # dx = -1, 0, 1
        for dy in range(-1, 2):  # dy = -1, 0, 1
            # x, y方向それぞれに dx, dy移動した場所を(nx, ny)とする
            nx = x + dx
            ny = y + dy

            # nx と nyが庭の範囲内にいるかどうかと, field[nx][ny]が水たまりかどうかを判定
            if 0 <= nx and nx < N and 0 <= ny and ny < M and field[nx][ny] == 'W':
                # 新しい水たまりについて再帰でdfsする（呼び出された先でW→.に変換される）
                dfs(nx, ny)

res = 0
for i in range(N):
    for j in range(M):
        if field[i][j] == 'W':
            # Wが残っているならそこからdfsをはじめる
            dfs(i, j)
            res += 1 # dfsの度に連続したWは消えていく。dfsした数をカウント
print(res)

